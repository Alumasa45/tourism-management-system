services:  
  tourism-management-db:
    image: postgres:15-alpine
    container_name: tourism-management-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: aquinattaayo
      POSTGRES_DB: tourism-management
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes: 
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:8.0-alpine
    container_name: redis-cache
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-your_secure_redis_password}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-your_secure_redis_password}"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-your_secure_redis_password}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  nestjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-app
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      redis:
        condition: service_healthy
      tourism-management-db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules
volumes:
  pgdata:
    name: tourism-management
    driver: local
  redis-data:
    name: tourism-management-system-redis-data
    driver: local

networks: 
  app-network:
    driver: bridge